/* tslint:disable */
/* eslint-disable */
/**
 * v3-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface LiquidatePayload
 */
export interface LiquidatePayload {
    /**
     * Optional: default is exchange ID=0 because ID=0 is the only live exchange.
     * Either 1) the exchange's ID used in its PDA or 2) the exchange's full address.
     * @type {string}
     * @memberof LiquidatePayload
     */
    exchangeId?: string | null;
    /**
     * Address of the liquidator.
     * @type {string}
     * @memberof LiquidatePayload
     */
    liquidator: string;
    /**
     * Either 1) the liquidator margin account's ID used in its PDA or 2) the liquidator margin account's full address.
     * @type {string}
     * @memberof LiquidatePayload
     */
    liquidatorMarginAccountId: string;
    /**
     * Address of the margin account to liquidate.
     * @type {string}
     * @memberof LiquidatePayload
     */
    marginAccountToLiquidate: string;
    /**
     * Optional: priority fee percentile as a basis points number where 50th percentile is 5000. Default is 80th percentile.
     * @type {number}
     * @memberof LiquidatePayload
     */
    priorityFeePercentile?: number | null;
}

/**
 * Check if a given object implements the LiquidatePayload interface.
 */
export function instanceOfLiquidatePayload(value: object): value is LiquidatePayload {
    if (!('liquidator' in value) || value['liquidator'] === undefined) return false;
    if (!('liquidatorMarginAccountId' in value) || value['liquidatorMarginAccountId'] === undefined) return false;
    if (!('marginAccountToLiquidate' in value) || value['marginAccountToLiquidate'] === undefined) return false;
    return true;
}

export function LiquidatePayloadFromJSON(json: any): LiquidatePayload {
    return LiquidatePayloadFromJSONTyped(json, false);
}

export function LiquidatePayloadFromJSONTyped(json: any, ignoreDiscriminator: boolean): LiquidatePayload {
    if (json == null) {
        return json;
    }
    return {
        
        'exchangeId': json['exchange_id'] == null ? undefined : json['exchange_id'],
        'liquidator': json['liquidator'],
        'liquidatorMarginAccountId': json['liquidator_margin_account_id'],
        'marginAccountToLiquidate': json['margin_account_to_liquidate'],
        'priorityFeePercentile': json['priority_fee_percentile'] == null ? undefined : json['priority_fee_percentile'],
    };
}

export function LiquidatePayloadToJSON(value?: LiquidatePayload | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'exchange_id': value['exchangeId'],
        'liquidator': value['liquidator'],
        'liquidator_margin_account_id': value['liquidatorMarginAccountId'],
        'margin_account_to_liquidate': value['marginAccountToLiquidate'],
        'priority_fee_percentile': value['priorityFeePercentile'],
    };
}

