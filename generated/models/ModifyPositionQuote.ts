/* tslint:disable */
/* eslint-disable */
/**
 * v3-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ModifyPositionQuote
 */
export interface ModifyPositionQuote {
    /**
     * Acceptable price or else trade fails.
     * Acceptable price is scaled by the protocol's price expo of -8. Price of 240 with expo of -8 would be 24000000000.
     * @type {number}
     * @memberof ModifyPositionQuote
     */
    acceptablePrice: number;
    /**
     * Price the trade would execute at if you immediately executed the trade.
     * @type {number}
     * @memberof ModifyPositionQuote
     */
    fillPrice: number;
    /**
     * Current index price for the market.
     * @type {number}
     * @memberof ModifyPositionQuote
     */
    indexPrice: number;
    /**
     * Entry funding per unit for the position if you immediately executed the trade.
     * @type {string}
     * @memberof ModifyPositionQuote
     */
    lastInteractionFundingPerUnit: string;
    /**
     * 
     * @type {string}
     * @memberof ModifyPositionQuote
     */
    marginAccountAddress: string;
    /**
     * 
     * @type {number}
     * @memberof ModifyPositionQuote
     */
    marginAccountId: number;
    /**
     * Integer ID of the market to trade.
     * @type {number}
     * @memberof ModifyPositionQuote
     */
    marketId: number;
    /**
     * New position size if the trade were to be executed.
     * @type {number}
     * @memberof ModifyPositionQuote
     */
    newPositionSize: number;
    /**
     * Position's initial margin ratio.
     * @type {number}
     * @memberof ModifyPositionQuote
     */
    positionInitialMarginRatio: number;
    /**
     * Position's maintenance margin ratio.
     * @type {number}
     * @memberof ModifyPositionQuote
     */
    positionMaintenanceMarginRatio: number;
    /**
     * Size delta is the amount of base asset units to trade. Ex. 25 sqft or .5 SOL.
     * Size delta must be scaled up by 6 decimals where 25 sqft would be 25000000 and .5 SOL would be 500000.
     * @type {number}
     * @memberof ModifyPositionQuote
     */
    sizeDelta: number;
    /**
     * Total required margin in usd collateral that the margin account must maintain to open this new position.
     * @type {number}
     * @memberof ModifyPositionQuote
     */
    totalRequiredMargin: number;
    /**
     * Trade fee you would pay if you immediately executed the trade
     * @type {number}
     * @memberof ModifyPositionQuote
     */
    tradeFee: number;
}

/**
 * Check if a given object implements the ModifyPositionQuote interface.
 */
export function instanceOfModifyPositionQuote(value: object): value is ModifyPositionQuote {
    if (!('acceptablePrice' in value) || value['acceptablePrice'] === undefined) return false;
    if (!('fillPrice' in value) || value['fillPrice'] === undefined) return false;
    if (!('indexPrice' in value) || value['indexPrice'] === undefined) return false;
    if (!('lastInteractionFundingPerUnit' in value) || value['lastInteractionFundingPerUnit'] === undefined) return false;
    if (!('marginAccountAddress' in value) || value['marginAccountAddress'] === undefined) return false;
    if (!('marginAccountId' in value) || value['marginAccountId'] === undefined) return false;
    if (!('marketId' in value) || value['marketId'] === undefined) return false;
    if (!('newPositionSize' in value) || value['newPositionSize'] === undefined) return false;
    if (!('positionInitialMarginRatio' in value) || value['positionInitialMarginRatio'] === undefined) return false;
    if (!('positionMaintenanceMarginRatio' in value) || value['positionMaintenanceMarginRatio'] === undefined) return false;
    if (!('sizeDelta' in value) || value['sizeDelta'] === undefined) return false;
    if (!('totalRequiredMargin' in value) || value['totalRequiredMargin'] === undefined) return false;
    if (!('tradeFee' in value) || value['tradeFee'] === undefined) return false;
    return true;
}

export function ModifyPositionQuoteFromJSON(json: any): ModifyPositionQuote {
    return ModifyPositionQuoteFromJSONTyped(json, false);
}

export function ModifyPositionQuoteFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModifyPositionQuote {
    if (json == null) {
        return json;
    }
    return {
        
        'acceptablePrice': json['acceptable_price'],
        'fillPrice': json['fill_price'],
        'indexPrice': json['index_price'],
        'lastInteractionFundingPerUnit': json['last_interaction_funding_per_unit'],
        'marginAccountAddress': json['margin_account_address'],
        'marginAccountId': json['margin_account_id'],
        'marketId': json['market_id'],
        'newPositionSize': json['new_position_size'],
        'positionInitialMarginRatio': json['position_initial_margin_ratio'],
        'positionMaintenanceMarginRatio': json['position_maintenance_margin_ratio'],
        'sizeDelta': json['size_delta'],
        'totalRequiredMargin': json['total_required_margin'],
        'tradeFee': json['trade_fee'],
    };
}

export function ModifyPositionQuoteToJSON(value?: ModifyPositionQuote | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'acceptable_price': value['acceptablePrice'],
        'fill_price': value['fillPrice'],
        'index_price': value['indexPrice'],
        'last_interaction_funding_per_unit': value['lastInteractionFundingPerUnit'],
        'margin_account_address': value['marginAccountAddress'],
        'margin_account_id': value['marginAccountId'],
        'market_id': value['marketId'],
        'new_position_size': value['newPositionSize'],
        'position_initial_margin_ratio': value['positionInitialMarginRatio'],
        'position_maintenance_margin_ratio': value['positionMaintenanceMarginRatio'],
        'size_delta': value['sizeDelta'],
        'total_required_margin': value['totalRequiredMargin'],
        'trade_fee': value['tradeFee'],
    };
}

