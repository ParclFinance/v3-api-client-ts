/* tslint:disable */
/* eslint-disable */
/**
 * v3-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ExchangeInfoAccounting
 */
export interface ExchangeInfoAccounting {
    /**
     * 
     * @type {number}
     * @memberof ExchangeInfoAccounting
     */
    balance: number;
    /**
     * 
     * @type {number}
     * @memberof ExchangeInfoAccounting
     */
    lastTimeLockedOpenInterestAccountingRefreshed: number;
    /**
     * 
     * @type {number}
     * @memberof ExchangeInfoAccounting
     */
    lpBalance: number;
    /**
     * 
     * @type {number}
     * @memberof ExchangeInfoAccounting
     */
    lpShares: number;
    /**
     * 
     * @type {number}
     * @memberof ExchangeInfoAccounting
     */
    marginBalance: number;
    /**
     * 
     * @type {number}
     * @memberof ExchangeInfoAccounting
     */
    notionalOpenInterest: number;
    /**
     * 
     * @type {number}
     * @memberof ExchangeInfoAccounting
     */
    protocolFees: number;
    /**
     * 
     * @type {number}
     * @memberof ExchangeInfoAccounting
     */
    unsettledCollateralAmount: number;
}

/**
 * Check if a given object implements the ExchangeInfoAccounting interface.
 */
export function instanceOfExchangeInfoAccounting(value: object): value is ExchangeInfoAccounting {
    if (!('balance' in value) || value['balance'] === undefined) return false;
    if (!('lastTimeLockedOpenInterestAccountingRefreshed' in value) || value['lastTimeLockedOpenInterestAccountingRefreshed'] === undefined) return false;
    if (!('lpBalance' in value) || value['lpBalance'] === undefined) return false;
    if (!('lpShares' in value) || value['lpShares'] === undefined) return false;
    if (!('marginBalance' in value) || value['marginBalance'] === undefined) return false;
    if (!('notionalOpenInterest' in value) || value['notionalOpenInterest'] === undefined) return false;
    if (!('protocolFees' in value) || value['protocolFees'] === undefined) return false;
    if (!('unsettledCollateralAmount' in value) || value['unsettledCollateralAmount'] === undefined) return false;
    return true;
}

export function ExchangeInfoAccountingFromJSON(json: any): ExchangeInfoAccounting {
    return ExchangeInfoAccountingFromJSONTyped(json, false);
}

export function ExchangeInfoAccountingFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExchangeInfoAccounting {
    if (json == null) {
        return json;
    }
    return {
        
        'balance': json['balance'],
        'lastTimeLockedOpenInterestAccountingRefreshed': json['last_time_locked_open_interest_accounting_refreshed'],
        'lpBalance': json['lp_balance'],
        'lpShares': json['lp_shares'],
        'marginBalance': json['margin_balance'],
        'notionalOpenInterest': json['notional_open_interest'],
        'protocolFees': json['protocol_fees'],
        'unsettledCollateralAmount': json['unsettled_collateral_amount'],
    };
}

export function ExchangeInfoAccountingToJSON(value?: ExchangeInfoAccounting | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'balance': value['balance'],
        'last_time_locked_open_interest_accounting_refreshed': value['lastTimeLockedOpenInterestAccountingRefreshed'],
        'lp_balance': value['lpBalance'],
        'lp_shares': value['lpShares'],
        'margin_balance': value['marginBalance'],
        'notional_open_interest': value['notionalOpenInterest'],
        'protocol_fees': value['protocolFees'],
        'unsettled_collateral_amount': value['unsettledCollateralAmount'],
    };
}

