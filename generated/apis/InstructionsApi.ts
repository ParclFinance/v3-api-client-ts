/* tslint:disable */
/* eslint-disable */
/**
 * v3-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CloseMarginAccountPayload,
  ClosePositionPayload,
  CreateMarginAccountPayload,
  DepositMarginPayload,
  InstructionInfo,
  LiquidatePayload,
  ModifyPositionPayload,
  WithdrawMarginPayload,
} from '../models/index';
import {
    CloseMarginAccountPayloadFromJSON,
    CloseMarginAccountPayloadToJSON,
    ClosePositionPayloadFromJSON,
    ClosePositionPayloadToJSON,
    CreateMarginAccountPayloadFromJSON,
    CreateMarginAccountPayloadToJSON,
    DepositMarginPayloadFromJSON,
    DepositMarginPayloadToJSON,
    InstructionInfoFromJSON,
    InstructionInfoToJSON,
    LiquidatePayloadFromJSON,
    LiquidatePayloadToJSON,
    ModifyPositionPayloadFromJSON,
    ModifyPositionPayloadToJSON,
    WithdrawMarginPayloadFromJSON,
    WithdrawMarginPayloadToJSON,
} from '../models/index';

export interface GetCloseMarginAccountInstructionsRequest {
    closeMarginAccountPayload: CloseMarginAccountPayload;
}

export interface GetClosePositionInstructionsRequest {
    closePositionPayload: ClosePositionPayload;
}

export interface GetCreateMarginAccountInstructionsRequest {
    createMarginAccountPayload: CreateMarginAccountPayload;
}

export interface GetDepositMarginInstructionsRequest {
    depositMarginPayload: DepositMarginPayload;
}

export interface GetLiquidateInstructionsRequest {
    liquidatePayload: LiquidatePayload;
}

export interface GetModifyPositionInstructionsRequest {
    modifyPositionPayload: ModifyPositionPayload;
}

export interface GetWithdrawMarginInstructionsRequest {
    withdrawMarginPayload: WithdrawMarginPayload;
}

/**
 * InstructionsApi - interface
 * 
 * @export
 * @interface InstructionsApiInterface
 */
export interface InstructionsApiInterface {
    /**
     * 
     * @summary Get close margin account instructions. Instruction endpoint does not validate that the margin account to be closed is empty and able to be closed. Priority fee percentile is optional. Returns parcl-v3 instruction, compute budget program instructions, and required SOL in lamports.
     * @param {CloseMarginAccountPayload} closeMarginAccountPayload 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InstructionsApiInterface
     */
    getCloseMarginAccountInstructionsRaw(requestParameters: GetCloseMarginAccountInstructionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<InstructionInfo>>;

    /**
     * Get close margin account instructions. Instruction endpoint does not validate that the margin account to be closed is empty and able to be closed. Priority fee percentile is optional. Returns parcl-v3 instruction, compute budget program instructions, and required SOL in lamports.
     */
    getCloseMarginAccountInstructions(requestParameters: GetCloseMarginAccountInstructionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<InstructionInfo>;

    /**
     * 
     * @summary Get close position instructions. Size delta cannot be 0. Instruction endpoint does not validate that the user has enough margin collateral to make the trade. Priority fee percentile is optional. Returns parcl-v3 instruction, compute budget program instructions, and required SOL in lamports.
     * @param {ClosePositionPayload} closePositionPayload 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InstructionsApiInterface
     */
    getClosePositionInstructionsRaw(requestParameters: GetClosePositionInstructionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<InstructionInfo>>;

    /**
     * Get close position instructions. Size delta cannot be 0. Instruction endpoint does not validate that the user has enough margin collateral to make the trade. Priority fee percentile is optional. Returns parcl-v3 instruction, compute budget program instructions, and required SOL in lamports.
     */
    getClosePositionInstructions(requestParameters: GetClosePositionInstructionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<InstructionInfo>;

    /**
     * 
     * @summary Get create margin account instructions. Optionally pass in the new margin account integer ID. Defaults to any unused ID that the API finds. Priority fee percentile is optional. Returns parcl-v3 instruction, compute budget program instructions, and margin account ID for the new margin account.
     * @param {CreateMarginAccountPayload} createMarginAccountPayload 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InstructionsApiInterface
     */
    getCreateMarginAccountInstructionsRaw(requestParameters: GetCreateMarginAccountInstructionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<InstructionInfo>>;

    /**
     * Get create margin account instructions. Optionally pass in the new margin account integer ID. Defaults to any unused ID that the API finds. Priority fee percentile is optional. Returns parcl-v3 instruction, compute budget program instructions, and margin account ID for the new margin account.
     */
    getCreateMarginAccountInstructions(requestParameters: GetCreateMarginAccountInstructionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<InstructionInfo>;

    /**
     * 
     * @summary Get deposit margin instructions. Instruction endpoint does not validate that the user has enough margin collateral tokens in their associated token account to deposit. Priority fee percentile is optional. Returns parcl-v3 instruction, compute budget program instructions, and required SOL in lamports.
     * @param {DepositMarginPayload} depositMarginPayload 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InstructionsApiInterface
     */
    getDepositMarginInstructionsRaw(requestParameters: GetDepositMarginInstructionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<InstructionInfo>>;

    /**
     * Get deposit margin instructions. Instruction endpoint does not validate that the user has enough margin collateral tokens in their associated token account to deposit. Priority fee percentile is optional. Returns parcl-v3 instruction, compute budget program instructions, and required SOL in lamports.
     */
    getDepositMarginInstructions(requestParameters: GetDepositMarginInstructionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<InstructionInfo>;

    /**
     * 
     * @summary Get liquidate transaction. Instruction endpoint does not validate that the margin account can be liquidated. Priority fee percentile is optional. Returns parcl-v3 instruction, compute budget program instructions, and required SOL in lamports.
     * @param {LiquidatePayload} liquidatePayload 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InstructionsApiInterface
     */
    getLiquidateInstructionsRaw(requestParameters: GetLiquidateInstructionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<InstructionInfo>>;

    /**
     * Get liquidate transaction. Instruction endpoint does not validate that the margin account can be liquidated. Priority fee percentile is optional. Returns parcl-v3 instruction, compute budget program instructions, and required SOL in lamports.
     */
    getLiquidateInstructions(requestParameters: GetLiquidateInstructionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<InstructionInfo>;

    /**
     * 
     * @summary Get modify position instructions. Size delta cannot be 0. Instruction endpoint does not validate that the user has enough margin collateral to make the trade. Priority fee percentile is optional. Returns parcl-v3 instruction, compute budget program instructions, and required SOL in lamports.
     * @param {ModifyPositionPayload} modifyPositionPayload 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InstructionsApiInterface
     */
    getModifyPositionInstructionsRaw(requestParameters: GetModifyPositionInstructionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<InstructionInfo>>;

    /**
     * Get modify position instructions. Size delta cannot be 0. Instruction endpoint does not validate that the user has enough margin collateral to make the trade. Priority fee percentile is optional. Returns parcl-v3 instruction, compute budget program instructions, and required SOL in lamports.
     */
    getModifyPositionInstructions(requestParameters: GetModifyPositionInstructionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<InstructionInfo>;

    /**
     * 
     * @summary Get withdraw margin instructions. Instruction endpoint does not validate that the user can successfully withdraw the specified amount of margin collateral. Priority fee percentile is optional. Returns parcl-v3 instruction, compute budget program instructions, and required SOL in lamports.
     * @param {WithdrawMarginPayload} withdrawMarginPayload 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InstructionsApiInterface
     */
    getWithdrawMarginInstructionsRaw(requestParameters: GetWithdrawMarginInstructionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<InstructionInfo>>;

    /**
     * Get withdraw margin instructions. Instruction endpoint does not validate that the user can successfully withdraw the specified amount of margin collateral. Priority fee percentile is optional. Returns parcl-v3 instruction, compute budget program instructions, and required SOL in lamports.
     */
    getWithdrawMarginInstructions(requestParameters: GetWithdrawMarginInstructionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<InstructionInfo>;

}

/**
 * 
 */
export class InstructionsApi extends runtime.BaseAPI implements InstructionsApiInterface {

    /**
     * Get close margin account instructions. Instruction endpoint does not validate that the margin account to be closed is empty and able to be closed. Priority fee percentile is optional. Returns parcl-v3 instruction, compute budget program instructions, and required SOL in lamports.
     */
    async getCloseMarginAccountInstructionsRaw(requestParameters: GetCloseMarginAccountInstructionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<InstructionInfo>> {
        if (requestParameters['closeMarginAccountPayload'] == null) {
            throw new runtime.RequiredError(
                'closeMarginAccountPayload',
                'Required parameter "closeMarginAccountPayload" was null or undefined when calling getCloseMarginAccountInstructions().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/v1/close-margin-account-instructions`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CloseMarginAccountPayloadToJSON(requestParameters['closeMarginAccountPayload']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => InstructionInfoFromJSON(jsonValue));
    }

    /**
     * Get close margin account instructions. Instruction endpoint does not validate that the margin account to be closed is empty and able to be closed. Priority fee percentile is optional. Returns parcl-v3 instruction, compute budget program instructions, and required SOL in lamports.
     */
    async getCloseMarginAccountInstructions(requestParameters: GetCloseMarginAccountInstructionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<InstructionInfo> {
        const response = await this.getCloseMarginAccountInstructionsRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Get close position instructions. Size delta cannot be 0. Instruction endpoint does not validate that the user has enough margin collateral to make the trade. Priority fee percentile is optional. Returns parcl-v3 instruction, compute budget program instructions, and required SOL in lamports.
     */
    async getClosePositionInstructionsRaw(requestParameters: GetClosePositionInstructionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<InstructionInfo>> {
        if (requestParameters['closePositionPayload'] == null) {
            throw new runtime.RequiredError(
                'closePositionPayload',
                'Required parameter "closePositionPayload" was null or undefined when calling getClosePositionInstructions().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/v1/close-position-instructions`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ClosePositionPayloadToJSON(requestParameters['closePositionPayload']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => InstructionInfoFromJSON(jsonValue));
    }

    /**
     * Get close position instructions. Size delta cannot be 0. Instruction endpoint does not validate that the user has enough margin collateral to make the trade. Priority fee percentile is optional. Returns parcl-v3 instruction, compute budget program instructions, and required SOL in lamports.
     */
    async getClosePositionInstructions(requestParameters: GetClosePositionInstructionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<InstructionInfo> {
        const response = await this.getClosePositionInstructionsRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Get create margin account instructions. Optionally pass in the new margin account integer ID. Defaults to any unused ID that the API finds. Priority fee percentile is optional. Returns parcl-v3 instruction, compute budget program instructions, and margin account ID for the new margin account.
     */
    async getCreateMarginAccountInstructionsRaw(requestParameters: GetCreateMarginAccountInstructionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<InstructionInfo>> {
        if (requestParameters['createMarginAccountPayload'] == null) {
            throw new runtime.RequiredError(
                'createMarginAccountPayload',
                'Required parameter "createMarginAccountPayload" was null or undefined when calling getCreateMarginAccountInstructions().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/v1/create-margin-account-instructions`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreateMarginAccountPayloadToJSON(requestParameters['createMarginAccountPayload']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => InstructionInfoFromJSON(jsonValue));
    }

    /**
     * Get create margin account instructions. Optionally pass in the new margin account integer ID. Defaults to any unused ID that the API finds. Priority fee percentile is optional. Returns parcl-v3 instruction, compute budget program instructions, and margin account ID for the new margin account.
     */
    async getCreateMarginAccountInstructions(requestParameters: GetCreateMarginAccountInstructionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<InstructionInfo> {
        const response = await this.getCreateMarginAccountInstructionsRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Get deposit margin instructions. Instruction endpoint does not validate that the user has enough margin collateral tokens in their associated token account to deposit. Priority fee percentile is optional. Returns parcl-v3 instruction, compute budget program instructions, and required SOL in lamports.
     */
    async getDepositMarginInstructionsRaw(requestParameters: GetDepositMarginInstructionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<InstructionInfo>> {
        if (requestParameters['depositMarginPayload'] == null) {
            throw new runtime.RequiredError(
                'depositMarginPayload',
                'Required parameter "depositMarginPayload" was null or undefined when calling getDepositMarginInstructions().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/v1/deposit-margin-instructions`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: DepositMarginPayloadToJSON(requestParameters['depositMarginPayload']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => InstructionInfoFromJSON(jsonValue));
    }

    /**
     * Get deposit margin instructions. Instruction endpoint does not validate that the user has enough margin collateral tokens in their associated token account to deposit. Priority fee percentile is optional. Returns parcl-v3 instruction, compute budget program instructions, and required SOL in lamports.
     */
    async getDepositMarginInstructions(requestParameters: GetDepositMarginInstructionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<InstructionInfo> {
        const response = await this.getDepositMarginInstructionsRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Get liquidate transaction. Instruction endpoint does not validate that the margin account can be liquidated. Priority fee percentile is optional. Returns parcl-v3 instruction, compute budget program instructions, and required SOL in lamports.
     */
    async getLiquidateInstructionsRaw(requestParameters: GetLiquidateInstructionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<InstructionInfo>> {
        if (requestParameters['liquidatePayload'] == null) {
            throw new runtime.RequiredError(
                'liquidatePayload',
                'Required parameter "liquidatePayload" was null or undefined when calling getLiquidateInstructions().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/v1/liquidate-instructions`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: LiquidatePayloadToJSON(requestParameters['liquidatePayload']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => InstructionInfoFromJSON(jsonValue));
    }

    /**
     * Get liquidate transaction. Instruction endpoint does not validate that the margin account can be liquidated. Priority fee percentile is optional. Returns parcl-v3 instruction, compute budget program instructions, and required SOL in lamports.
     */
    async getLiquidateInstructions(requestParameters: GetLiquidateInstructionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<InstructionInfo> {
        const response = await this.getLiquidateInstructionsRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Get modify position instructions. Size delta cannot be 0. Instruction endpoint does not validate that the user has enough margin collateral to make the trade. Priority fee percentile is optional. Returns parcl-v3 instruction, compute budget program instructions, and required SOL in lamports.
     */
    async getModifyPositionInstructionsRaw(requestParameters: GetModifyPositionInstructionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<InstructionInfo>> {
        if (requestParameters['modifyPositionPayload'] == null) {
            throw new runtime.RequiredError(
                'modifyPositionPayload',
                'Required parameter "modifyPositionPayload" was null or undefined when calling getModifyPositionInstructions().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/v1/modify-position-instructions`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ModifyPositionPayloadToJSON(requestParameters['modifyPositionPayload']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => InstructionInfoFromJSON(jsonValue));
    }

    /**
     * Get modify position instructions. Size delta cannot be 0. Instruction endpoint does not validate that the user has enough margin collateral to make the trade. Priority fee percentile is optional. Returns parcl-v3 instruction, compute budget program instructions, and required SOL in lamports.
     */
    async getModifyPositionInstructions(requestParameters: GetModifyPositionInstructionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<InstructionInfo> {
        const response = await this.getModifyPositionInstructionsRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Get withdraw margin instructions. Instruction endpoint does not validate that the user can successfully withdraw the specified amount of margin collateral. Priority fee percentile is optional. Returns parcl-v3 instruction, compute budget program instructions, and required SOL in lamports.
     */
    async getWithdrawMarginInstructionsRaw(requestParameters: GetWithdrawMarginInstructionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<InstructionInfo>> {
        if (requestParameters['withdrawMarginPayload'] == null) {
            throw new runtime.RequiredError(
                'withdrawMarginPayload',
                'Required parameter "withdrawMarginPayload" was null or undefined when calling getWithdrawMarginInstructions().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/v1/withdraw-margin-instructions`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: WithdrawMarginPayloadToJSON(requestParameters['withdrawMarginPayload']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => InstructionInfoFromJSON(jsonValue));
    }

    /**
     * Get withdraw margin instructions. Instruction endpoint does not validate that the user can successfully withdraw the specified amount of margin collateral. Priority fee percentile is optional. Returns parcl-v3 instruction, compute budget program instructions, and required SOL in lamports.
     */
    async getWithdrawMarginInstructions(requestParameters: GetWithdrawMarginInstructionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<InstructionInfo> {
        const response = await this.getWithdrawMarginInstructionsRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
